stages:
  - check
  - test
  - build
  - publish

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^feature\/.*$/ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "develop"'

default:
  image: maven

variables:
  GRADLE_CACHE: gradle-cache
  GRADLE_CMD_OPTS: --no-daemon

checkstyle:
  stage: check
  script:
      - "./gradlew check -x test $GRADLE_CMD_OPTS"
  artifacts:
    paths:
      - "build/reports/checkstyle/*.html"
    when: on_success
  cache:
    key: $GRADLE_CACHE
    paths:
      - ".gradle"
      - ".build"
  allow_failure: true

test:
  stage: test
  script:
      - "./gradlew test -x check $GRADLE_CMD_OPTS"
  allow_failure: false
  artifacts:
    paths:
      - "build/reports/tests/test"
  cache:
    key: $GRADLE_CACHE
    paths:
      - ".gradle"
      - ".build"
    when: on_success

build:
  stage: build
  image: docker
  services:
      - docker:dind
  variables:
    DOCKER_TLS_CERTS: /certs
    DOCKER_MAIN_SUFFIX: main
    DOCKER_MERGE_REQUEST_SUFFIX: pr
  cache:
    key: docker-images
    paths:
      - "/var/lib/docker"
  script:
      - |
        if [[ "$CI_PIPELINE_SOURCE" == "push" && "$CI_COMMIT_BRANCH" == "main" ]]; then
          IMAGE=$CONTAINER_REGISTRY/$DOCKER_MAIN_SUFFIX
        elif [[ "$CI_PIPELINE_SOURCE" == "merge_request_event" ]]; then
          IMAGE=$CONTAINER_REGISTRY/$DOCKER_MERGE_REQUEST_SUFFIX
        fi
      - "docker build -t $IMAGE:$CI_COMMIT_SHORT_SHA -t $IMAGE:latest -f Dockerfile ."
      - "echo $CONTAINER_REGISTRY_PSW | docker login -u $CONTAINER_REGISTRY_USR --password-stdin $IMAGE"
      - "docker push $IMAGE --all-tags"  
